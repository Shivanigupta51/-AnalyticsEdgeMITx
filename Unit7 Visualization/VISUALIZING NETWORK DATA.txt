VISUALIZING NETWORK DATA

The cliche goes that the world is an increasingly interconnected place, and the connections between different entities are often best represented with a graph. Graphs are comprised of vertices (also often called "nodes") and edges connecting those nodes. In this assignment, we will learn how to visualize networks using the igraph package in R.

For this assignment, we will visualize social networking data using anonymized data from Facebook; this data was originally curated in a recent paper about computing social circles in social networks. In our visualizations, the vertices in our network will represent Facebook users and the edges will represent these users being Facebook friends with each other.

The first file we will use, edges.csv, contains variables V1 and V2, which label the endpoints of edges in our network. Each row represents a pair of users in our graph who are Facebook friends. For a pair of friends A and B, edges.csv will only contain a single row -- the smaller identifier will be listed first in this row. From this row, we will know that A is friends with B and B is friends with A.

The second file, users.csv, contains information about the Facebook users, who are the vertices in our network. This file contains the following variables:

id: A unique identifier for this user; this is the value that appears in the rows of edges.csv

gender: An identifier for the gender of a user taking the values A and B. Because the data is anonymized, we don't know which value refers to males and which value refers to females.

school: An identifier for the school the user attended taking the values A and AB (users with AB attended school A as well as another school B). Because the data is anonymized, we don't know the schools represented by A and B.

locale: An identifier for the locale of the user taking the values A and B. Because the data is anonymized, we don't know which value refers to what locale.

PROBLEM 1.1 - SUMMARIZING THE DATA  (1/2 points)
Load the data from edges.csv into a data frame called edges, and load the data from users.csv into a data frame called users.

How many Facebook users are there in our dataset?

 59 - correct  
In our dataset, what is the average number of friends per user? Hint: this question is tricky, and it might help to start by thinking about a small example with two users who are friends.

 2.65 - incorrect  
SHOW ANSWER  You have used 5 of 5 submissions
PROBLEM 1.2 - SUMMARIZING THE DATA  (1/1 point)
Out of all the students who listed a school, what was the most common locale?

 Locale A  Locale B Locale B - correct
 SHOW ANSWER  You have used 1 of 1 submissions
PROBLEM 1.3 - SUMMARIZING THE DATA  (1 point possible)
Is it possible that either school A or B is an all-girls or all-boys school?

 No  Yes
- unanswered
FINAL CHECK YOUR ANSWER  SAVE YOUR ANSWER You have used 0 of 1 submissions
PROBLEM 2.1 - CREATING A NETWORK  (1/1 point)
We will be using the igraph package to visualize networks; install and load this package using the install.packages and library commands.

We can create a new graph object using the graph.data.frame() function. Based on ?graph.data.frame, which of the following commands will create a graph g describing our social network, with the attributes of each user correctly loaded?

Note: A directed graph is one where the edges only go one way -- they point from one vertex to another. The other option is an undirected graph, which means that the relations between the vertices are symmetric.

 g = graph.data.frame(edges, FALSE, users) g = graph.data.frame(edges, FALSE, users) - correct  g = graph.data.frame(users, FALSE, edges)  g = graph.data.frame(edges, TRUE, users)  g = graph.data.frame(users, TRUE, edges)
 SHOW ANSWER  You have used 1 of 1 submissions
PROBLEM 2.2 - CREATING A NETWORK  (2/2 points)
Use the correct command from Problem 2.1 to load the graph g.

Now, we want to plot our graph. By default, the vertices are large and have text labels of a user's identifier. Because this would clutter the output, we will plot with no text labels and smaller vertices:

plot(g, vertex.size=5, vertex.label=NA)

In this graph, there are a number of groups of nodes where all the nodes in each group are connected but the groups are disjoint from one another, forming "islands" in the graph. Such groups are called "connected components," or "components" for short. How many connected components with at least 2 nodes are there in the graph?

 4 - correct  
How many users are there with no friends in the network?

 7 - correct  
CHECK YOUR ANSWER  SAVE YOUR ANSWER  SHOW ANSWER  You have used 1 of 3 submissions
PROBLEM 2.3 - CREATING A NETWORK  (1/1 point)
In our graph, the "degree" of a node is its number of friends. We have already seen that some nodes in our graph have degree 0 (these are the nodes with no friends), while others have much higher degree. We can use degree(g) to compute the degree of all the nodes in our graph g.

How many users are friends with 10 or more other Facebook users in this network?

 9 - correct  
CHECK YOUR ANSWER  SAVE YOUR ANSWER  SHOW ANSWER  You have used 1 of 3 submissions
PROBLEM 2.4 - CREATING A NETWORK  (2/2 points)
In a network, it's often visually useful to draw attention to "important" nodes in the network. While this might mean different things in different contexts, in a social network we might consider a user with a large number of friends to be an important user. From the previous problem, we know this is the same as saying that nodes with a high degree are important users.

To visually draw attention to these nodes, we will change the size of the vertices so the vertices with high degrees are larger. To do this, we will change the "size" attribute of the vertices of our graph to be an increasing function of their degrees:

V(g)$size = degree(g)/2+2

Now that we have specified the vertex size of each vertex, we will no longer use the vertex.size parameter when we plot our graph:

plot(g, vertex.label=NA)

What is the largest size we assigned to any node in our graph?

 11.0 - correct  
What is the smallest size we assigned to any node in our graph?

 2.0 - correct  
CHECK YOUR ANSWER  SAVE YOUR ANSWER  SHOW ANSWER  You have used 1 of 3 submissions
PROBLEM 3.1 - COLORING VERTICES  (1/1 point)
Thus far, we have changed the "size" attributes of our vertices. However, we can also change the colors of vertices to capture additional information about the Facebook users we are depicting.

When changing the size of nodes, we first obtained the vertices of our graph with V(g) and then accessed the the size attribute with V(g)$size. To change the color, we will update the attribute V(g)$color.

To color the vertices based on the gender of the user, we will need access to that variable. When we created our graph g, we provided it with the data frame users, which had variables gender, school, and locale. These are now stored as attributes V(g)$gender, V(g)$school, and V(g)$locale.

We can update the colors by setting the color to black for all vertices, than setting it to red for the vertices with gender A and setting it to gray for the vertices with gender B:

V(g)$color = "black"

V(g)$color[V(g)$gender == "A"] = "red"

V(g)$color[V(g)$gender == "B"] = "gray"

Plot the resulting graph. What is the gender of the users with the highest degree in the graph?

 Missing gender value  Gender A  Gender B Gender B - correct
 SHOW ANSWER  You have used 1 of 1 submissions
PROBLEM 3.2 - COLORING VERTICES  (2/2 points)
Now, color the vertices based on the school that each user in our network attended.

Are the two users who attended both schools A and B Facebook friends with each other?

 Yes Yes - correct  No
What best describes the users with highest degree?

 None of the high-degree users attended school A  Some, but not all, of the high-degree users attended school A Some, but not all, of the high-degree users attended school A - correct  All of the high-degree users attended school A
 SHOW ANSWER  You have used 1 of 1 submissions
PROBLEM 3.3 - COLORING VERTICES  (2/2 points)
Now, color the vertices based on the locale of the user.

The large connected component is most associated with which locale?

 Locale A  Locale B Locale B - correct
The 4-user connected component is most associated with which locale?

 Locale A Locale A - correct  Locale B
 SHOW ANSWER  You have used 1 of 1 submissions
PROBLEM 4 - OTHER PLOTTING OPTIONS  (2/2 points)
The help page is a helpful tool when making visualizations. Answer the following questions with the help of ?igraph.plotting and experimentation in your R console.

Which igraph plotting function would enable us to plot our graph in 3-D?

 rglplot - correct  
What parameter to the plot() function would we use to change the edge width when plotting g?

 edge.width - correct  
CHECK YOUR ANSWER  SAVE YOUR ANSWER  SHOW ANSWER  You have used 1 of 4 submissions